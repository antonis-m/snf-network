#!/bin/bash

source /etc/default/snf-network

source $CONF

if [ $# -ne 1 ]; then 
  echo Usage: $0 add/remove
  exit 1
fi


ACTION=$1
NETWORKS="$(ls $SHAREDDIR/networks/)"

HOSTNAME=$(hostname)

if [ "$ACTION" == "add" ]; then
  snf-network-configure-interfaces
fi

for NETWORK in $NETWORKS; do

NETFILE=$SHAREDDIR/networks/$NETWORK
NODEMAPFILE=$SHAREDDIR/mappings/$NETWORK-$HOSTNAME
NODEINFRAFILE=$SHAREDDIR/infra/$HOSTNAME

RT_TABLES=/etc/iproute2/rt_tables

source $NODEINFRAFILE
source $NETFILE
source $NODEMAPFILE



if [ "$ACTION" == "add" ]; then
  if [ "$MODE" == "routed" ]; then 
    VLAN=$LINK
    TABLE=rt_$NETWORK
    if [ "$TYPE" == "public" ]; then
      ARP_IP=$(ipcalc $SUBNET | grep HostMax | awk '{print $2}')
      
      ip link set $VLAN up

      echo 1 > "/proc/sys/net/ipv4/conf/$VLAN/proxy_arp"

      ID=$(wc -l < $RT_TABLES)
      echo $((ID+1)) $TABLE >> $RT_TABLES

      ip rule add iif $VLAN table $TABLE

      ip route add $SUBNET dev $VLAN table main 

      ip route add $SUBNET dev $VLAN table $TABLE
      ip route add default via $GATEWAY dev $VLAN table $TABLE
      
      echo 1 > /proc/sys/net/ipv4/conf/all/forwarding

      arptables -A OUTPUT -o $VLAN --opcode request -j mangle --mangle-ip-s  $ARP_IP 
    fi
  fi



  if [ "$MODE" == "bridged" ]; then
    BRIDGE=$LINK
    if [ ! -z "$GATEWAY" ]; then
      if [ "$TYPE" == "private" ]; then 
        if [ "$HOSTNAME" == "$ROUTER" ]; then
          NETMASK=$(ipcalc $SUBNET | grep Netmask | awk '{print $4}')
          ip addr add $GATEWAY/$NETMASK dev $BRIDGE
          iptables -t nat -A POSTROUTING -s $SUBNET \! -d 192.168.0.0/16 -j MASQUERADE
        fi  
      fi
    fi
  fi
  
elif [ "$ACTION" == "remove" ]; then
  if [ ! -e "$NODEMAPFILE" ]; then
    exit 0;
  fi

  source $NODEMAPFILE

  if [ "$MODE" == "routed" ]; then 
    VLAN=$LINK
    TABLE=rt_$NETWORK
    if [ "$TYPE" == "public" ]; then
      ARP_IP=$(ipcalc $SUBNET | grep HostMax | awk '{print $2}')
    
      arptables -D OUTPUT -o $VLAN --opcode request -j mangle --mangle-ip-s  $ARP_IP 

      ip route del default via $GATEWAY dev $VLAN table $TABLE
      ip route del $SUBNET dev $VLAN table $TABLE

      ip route del $SUBNET dev $VLAN table main 

      ip rule del iif $VLAN table $TABLE
      
      sed -i 's/.*'"$TABLE"'$//' $RT_TABLES
    fi
  fi



  if [ "$MODE" == "bridged" ]; then
    BRIDGE=$LINK
    if [ ! -z "$GATEWAY" ]; then
      if [ "$TYPE" == "private" ]; then 
        if [ "$HOSTNAME" == "$ROUTER" ]; then
          NETMASK=$(ipcalc $SUBNET | grep Netmask | awk '{print $4}')
          ip addr del $GATEWAY/$NETMASK dev $BRIDGE
          iptables -t nat -D POSTROUTING -s $SUBNET \! -d 192.168.0.0/16 -j MASQUERADE
        fi  
      fi
    fi
  fi
  

fi

done

if [ "$ACTION" == "remove" ]; then
  snf-network-unconfigure-interfaces
fi 
