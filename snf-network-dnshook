#!/bin/bash
#
# Copyright 2014 GRNET S.A. All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#   1. Redistributions of source code must retain the above
#      copyright notice, this list of conditions and the following
#      disclaimer.
#
#   2. Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials
#      provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY GRNET S.A. ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GRNET S.A OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and
# documentation are those of the authors and should not be
# interpreted as representing official policies, either expressed
# or implied, of GRNET S.A.

# Configuration Fallbacks. All can(must for some of them) be overwritten by /etc/default/snf-network
TTL=300
# the bind server IP/FQDN
SERVER=""
# this is the .vm.synnefo.live.
# Leave empty if only reverse dns management is needed.
# TODO: make this zone to be instance specific!!!
FZONE=""
# the file with dns authorization keys
KEYFILE=""
MAC2EUI64="/usr/bin/mac2eui64"

source /etc/default/snf-network
source /usr/lib/snf-network/common.sh

if [ -z "$SERVER" -o -z "$FZONE" -o ! -e "$KEYFILE" ]; then
  exit 0
fi

update_dns () {

  if [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_CREATE" ]; then
    update_all add
  elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_REMOVE" ]; then
    update_all delete
  elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_RENAME" ]; then
    update_all delete
    # Let's override a variable and add ourselves
    INSTANCE=$GANETI_INSTANCE_NEW_NAME
    update_all add
  elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_STARTUP" ]; then
    update_all add
  elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_SHUTDOWN" ]; then
    update_all delete
  elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_REBOOT" ]; then
    update_all add
  elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_SET_PARAMS" ]; then
    update_all add
  fi

}

# Reset all entries related to the specific instance
# This should be invoced only during instance modification
# because we do not know which nics have been modify
reset_dns () {

  if [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_SET_PARAMS" ]; then
    query_dns
    # This should remove the A, AAAA, CNAME entries
    send_command "update delete $INSTANCE.$FZONE"
    for ip in $HOST_IP_ALL; do
      get_rev4_info $ip
      # This should remove the IPv4 reverse entry
      send_command "update delete $RLPART.$RZONE"
    done
    for ip6 in $HOST_IP6_ALL; do
      get_rev6_info $ip6
      # This should remove the IPv6 reverse entry
      send_command "update delete $R6LPART$R6ZONE."
    done
  fi

}



# Main starts here

INSTANCE=$GANETI_INSTANCE_NAME

# Exit if we do not have instance name.
# It should be exported to hooks for instance related opcodes.
if [ -z "$INSTANCE" ]; then
  exit 0
fi

# This runs only for instance modification
reset_dns

# If GANETI_INSTANCE_NIC_COUNT is not set then nothing happens
FIRST=0
LAST=$((GANETI_INSTANCE_NIC_COUNT - 1))
for idx in $(seq $FIRST $LAST); do
  ip=GANETI_INSTANCE_NIC${idx}_IP
  mac=GANETI_INSTANCE_NIC${idx}_MAC
  mode=GANETI_INSTANCE_NIC${idx}_MODE
  link=GANETI_INSTANCE_NIC${idx}_LINK
  subnet=GANETI_INSTANCE_NIC${idx}_NETWORK_SUBNET
  subnet6=GANETI_INSTANCE_NIC${idx}_NETWORK_SUBNET6
  tags=GANETI_INSTANCE_NIC${idx}_NETWORK_TAGS
  eval IP=\$$ip
  eval MAC=\$$mac
  eval MODE=\$$mode
  eval LINK=\$$link
  eval NETWORK_SUBNET=\$$subnet
  eval NETWORK_SUBNET6=\$$subnet6
  eval NETWORK_TAGS=\$$tags

  for tag in $NETWORK_TAGS; do
    case $tag in
    $DNS_TAG)

      get_info
      update_dns

      ;;
    esac

  done

done
